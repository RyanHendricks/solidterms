// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[],"name":"isActive","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"accepted","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"getBalanceInEth","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"contractHash","outputs":[{"name":"","type":"bytes32"}],"type":"function"},{"constant":false,"inputs":[{"name":"receiver","type":"address"},{"name":"amount","type":"uint256"}],"name":"sendCoin","outputs":[{"name":"sufficient","type":"bool"}],"type":"function"},{"constant":false,"inputs":[{"name":"_contractHash","type":"bytes32"}],"name":"changeContract","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"offerer","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"_contractHash","type":"bytes32"}],"name":"accept","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"lastChange","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"inputs":[],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"changer","type":"address"},{"indexed":false,"name":"contractHash","type":"bytes32"}],"name":"TermsChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"accepter","type":"address"},{"indexed":false,"name":"contractHash","type":"bytes32"}],"name":"TermsAccepted","type":"event"}],
    binary: "606060405260028054600160a060020a0319163317905532600160a060020a0316600090815260046020526040902061271090556100717f28678b42f7fcf403009f1805e4e1233163b231b24d2b22105f3ea3686403193f600254600160a060020a033381169116146100c857610002565b610323806101596000396000f35b6002546000546040805191825251600160a060020a0392909216917f32b0c5670462a82ce3dbd83e35094061fb60556f43a7a05e7a18b6ee5bb97a549181900360200190a25b50565b60008190554260015561007f81610146600060006001600050541180156100ed575060015b905090565b600160a060020a03331660008181526003602090815260408083204290559154825190815291517f8d0c8ab3f9077dc0f8465d197382d9be502ea72a21e747e89890684e21214b449281900390910190a250565b156100c55760005481146100f25761000256606060405236156100825760e060020a600035046322f3e2d481146100845780632b34af70146100a25780637bd703e8146100ba578063904c6094146100e557806390b98a11146100ee578063adac596f1461012f578063c782ff1f14610151578063e4725ba114610163578063f8b2cb4f14610172578063fab3f57b14610198575b005b6101a15b6000600060016000505411801561009d575060015b905090565b6101b560043560036020526000908152604090205481565b6101b5600435600073544d067e2a16209749edcaabbb478f982a2f1d5e6396e4ee3d6101e484610179565b6101b560005481565b6101a160043560243533600160a060020a03166000908152600360205260408120548190111561025b5760046020526040812054829010156102295761025b565b610082600435600254600160a060020a0390811633909116146102aa57610002565b6101c7600254600160a060020a031681565b6100826004355b6102bc610088565b6101b56004355b600160a060020a0381166000908152600460205260409020545b919050565b6101b560015481565b604080519115158252519081900360200190f35b60408051918252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b60026040518360e060020a02815260040180838152602001828152602001925050506020604051808303818660325a03f4156100025750506040515191506101939050565b5033600160a060020a039081166000908152600460205260408082208054859003905591841681522080548201905560015b92915050565b6002546000546040805191825251600160a060020a0392909216917f32b0c5670462a82ce3dbd83e35094061fb60556f43a7a05e7a18b6ee5bb97a549181900360200190a25b50565b6000819055426001556102618161016a565b156102a75760005481146102cf57610002565b33600160a060020a031660008181526003602090815260408083204290559154825190815291517f8d0c8ab3f9077dc0f8465d197382d9be502ea72a21e747e89890684e21214b449281900390910190a25056",
    unlinked_binary: "606060405260028054600160a060020a0319163317905532600160a060020a0316600090815260046020526040902061271090556100717f28678b42f7fcf403009f1805e4e1233163b231b24d2b22105f3ea3686403193f600254600160a060020a033381169116146100c857610002565b610323806101596000396000f35b6002546000546040805191825251600160a060020a0392909216917f32b0c5670462a82ce3dbd83e35094061fb60556f43a7a05e7a18b6ee5bb97a549181900360200190a25b50565b60008190554260015561007f81610146600060006001600050541180156100ed575060015b905090565b600160a060020a03331660008181526003602090815260408083204290559154825190815291517f8d0c8ab3f9077dc0f8465d197382d9be502ea72a21e747e89890684e21214b449281900390910190a250565b156100c55760005481146100f25761000256606060405236156100825760e060020a600035046322f3e2d481146100845780632b34af70146100a25780637bd703e8146100ba578063904c6094146100e557806390b98a11146100ee578063adac596f1461012f578063c782ff1f14610151578063e4725ba114610163578063f8b2cb4f14610172578063fab3f57b14610198575b005b6101a15b6000600060016000505411801561009d575060015b905090565b6101b560043560036020526000908152604090205481565b6101b5600435600073__ConvertLib____________________________6396e4ee3d6101e484610179565b6101b560005481565b6101a160043560243533600160a060020a03166000908152600360205260408120548190111561025b5760046020526040812054829010156102295761025b565b610082600435600254600160a060020a0390811633909116146102aa57610002565b6101c7600254600160a060020a031681565b6100826004355b6102bc610088565b6101b56004355b600160a060020a0381166000908152600460205260409020545b919050565b6101b560015481565b604080519115158252519081900360200190f35b60408051918252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b60026040518360e060020a02815260040180838152602001828152602001925050506020604051808303818660325a03f4156100025750506040515191506101939050565b5033600160a060020a039081166000908152600460205260408082208054859003905591841681522080548201905560015b92915050565b6002546000546040805191825251600160a060020a0392909216917f32b0c5670462a82ce3dbd83e35094061fb60556f43a7a05e7a18b6ee5bb97a549181900360200190a25b50565b6000819055426001556102618161016a565b156102a75760005481146102cf57610002565b33600160a060020a031660008181526003602090815260408083204290559154825190815291517f8d0c8ab3f9077dc0f8465d197382d9be502ea72a21e747e89890684e21214b449281900390910190a25056",
    address: "0x1bb06ebad07e66df8f48b14a21e22ab6b298d2ac",
    generated_with: "2.0.9",
    contract_name: "RicardoCoin"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("RicardoCoin error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("RicardoCoin error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("RicardoCoin error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("RicardoCoin error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.RicardoCoin = Contract;
  }

})();
